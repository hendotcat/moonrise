@use "sass:map";
@use "sass:math";

// $or is the radius of the outer
// circle which circumscribes the
// square and $ir is the radius
// of the inner circle inside it
// +------------+
// |    x  x    |
// | x+------+x |
// |x |      | x|
// |x |      | x|
// | x+------+x |
// |    x  x    |
// +------------+
$or: math.sqrt(
  math.pow(100, 2) * 2
) / 2;
$ir: 50;

$sea: (
  (3 * math.$pi) / 4,
  math.$pi / 4,
  0,
  math.$pi,
);

$sky: (
  math.$pi,
  math.$pi * 2,
  (math.$pi * 7) / 4,
  (math.$pi * 5) / 4,
);

@function arc($cx, $cy, $r) {
  @return "M #{$cx - $r}, #{$cy} a #{$r},#{$r} 0 1,0 #{$r * 2},0 a #{$r},#{$r} 0 1,0 #{$r * -2},0";
}

@function cpx($a, $r) {
  @return math.cos($a) * $r;
}

@function cpy($a, $r) {
  @return math.sin($a) * $r;
}

@function ox($a) {
  @return cpx($a, $or) + 50%;
}

@function oy($a) {
  @return cpy($a, $or) + 50%;
}

@function ix($a) {
  @return cpx($a, $ir) + 50%;
}

@function iy($a) {
  @return cpy($a, $ir) + 50%;
}

@function fix($o, $p) {
  $polygon: ();
  @for $i from 1 through 4 {
    $a: nth($o, $i);
    $a: $a + (math.$pi * 2) * $p;
    $polygon: append(
      $polygon,
      ox($a) oy($a),
      $separator: comma
    );
  }
  @return polygon(
    $polygon
  );
}

@keyframes sea {
  @for $i from 0 through 100 {
    #{$i * 1%} {
      clip-path: fix($sea, (100 - $i) / 100 * -1);
      transform: rotate($i / -100 * -360deg) scaleX(-1);
    }
  }
}

@keyframes sky {
  @for $i from 0 through 100 {
    #{$i * 1%} {
      clip-path: fix($sky, $i / 100);
      transform: rotate($i / 100 * -360deg);
    }
  }
}

html {
  background: white;
}

body {
  background-color: black;
  width: 80vmin;
  height: 80vmin;
  overflow: hidden;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  left: 50%;
}

body::before,
body::after {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  content: "";
}

body::before {
  background-color: snow;

  background-image: svg(0, 0, 128, 128, html("path", (
    "id": "circle",
    "d": arc(64, 64, 32),
    "fill": "transparent",
    "stroke": "blue",
    "stroke-width": "2",
    "transform": "rotate(180, 64, 64)" ,
  )) + html("text", (
    "x": "0",
    "font-size": "16",
  ), html("textPath", (
    "xlink:href": "#circle",
  ), "ðŸŒ–")));

  background-repeat: no-repeat;

  animation-name: sky;
  animation-duration: 2048ms;
  animation-direction: normal;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  transform-origin: center;
}

body::after {

  background-color: cyan;

  background-image: svg(0, 0, 128, 128, html("path", (
    "id": "circle",
    "d": arc(64, 64, 32),
    "fill": "transparent",
    "stroke": "blue",
    "stroke-width": "2",
    "transform": "rotate(-180, 64, 64)" ,
  )) + html("text", (
    "x": "0",
    "font-size": "16",
  ), html("textPath", (
    "xlink:href": "#circle",
  ), "ðŸŒ–")));

  background-repeat: no-repeat;

  animation-name: sea;
  animation-duration: 2048ms;
  animation-direction: normal;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  transform-origin: center;
}

